@using Microsoft.AspNetCore.Mvc.RazorPages
@model ECommerce.Shared.DTOs.Common.PagedResponse<ECommerce.Shared.DTOs.Product.ProductResponseDto>

@{
    ViewData["Title"] = "Product";
}

<div>
    <a href="@Url.Action("Create", "Product")" class="btn btn-primary"><i class="fa fa-plus"></i> Add New</a>  
</div>
<br /><br />

<div id="product" class="table-responsive">
    <table class="table table-condensed table-hover table-bordered table-striped table">
        <tr>
            <th>Name</th>
            <th>UnitPrice</th>
            <th>OldPrice</th>
            <th>Category</th>
            <th>SubCategory</th>
            <th>Supplier</th>
            <th>Discount</th>
            <th>UnitInStock</th>
            <th>UnitOnOrder</th>
            <th>ProductAvailable</th>
            <th></th>
        </tr>

        @if (Model.Data.Any())
        {
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.UnitPrice
                    </td>
                    <td>
                        @item.OldPrice
                    </td>
                    <td>
                        @(item.CategoryName ?? "")
                    </td>
                    <td>
                        @(item.SubCategoryName ?? "")
                    </td>
                    <td>
                        @(item.SupplierName ?? "")
                    </td>
                    <td>
                        @item.Discount
                    </td>
                    <td>
                        @item.Stock
                    </td>
                    <td>
                        @item.UnitOnOrder
                    </td>
                    <td>
                        @item.ProductAvailable
                    </td>
                    <td>
                        <a class="btn btn-sm btn-primary" href="@Url.Action("Edit", "Product", new { id = item.Id })" aria-label="Edit">
                            <i class="fa fa-edit" aria-hidden="true"></i>
                        </a>
                        <a class="btn btn-sm btn-info" href="@Url.Action("Details", "Product", new { id = item.Id })" aria-label="Details">
                            <i class="fa fa-info" aria-hidden="true"></i>
                        </a>
                        <a class="btn btn-sm btn-danger" href="@Url.Action("Delete", "Product", new { id = item.Id })" aria-label="Delete">
                            <i class="fa fa-trash-o" aria-hidden="true"></i>
                        </a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="11" class="text-center">No products found</td>
            </tr>        }
    </table>
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Product pagination">
        <ul class="pagination justify-content-center">
            <!-- Previous Page -->            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = Model.PageNumber - 1, 
                        pageSize = Model.PageSize
                    })">
                        <i class="fa fa-chevron-left"></i> Previous
                    </a>
                </li>
            }

            <!-- Page Numbers -->
            @{
                int startPage = Math.Max(1, Model.PageNumber - 2);
                int endPage = Math.Min(Model.TotalPages, Model.PageNumber + 2);
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = i, 
                        pageSize = Model.PageSize
                    })">@i</a>
                </li>
            }

            <!-- Next Page -->
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = Model.PageNumber + 1, 
                        pageSize = Model.PageSize
                    })">
                        Next <i class="fa fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}
